# A brief guide:

## How to use:
1. Run `setup.py` .
2. `get_rankings.py` has a function called `get_methods()`. In here, create a `pandas.DataFrame` with function and parameters from `enrichment_methods.py` which you want to use. Then, run `get_rankings.py` .
3. Run `evaluate_rankings.py` to plot the results.


# More details:

### What happens behind the scenes, in pseudocode:

1. **setup.py**
* The gmt files are transformed into gene-vector format, and other necessary files are downloaded and processed.

2. **get_scores.py**
* For each `(label, feature)` pair of gmt libraries:
	* Get a list of experiments in the label library whose corresponding transcription factor is also found in a feature library experiment
	* (From here on, this list will be referred to as the label library transcription factors)
	* For each enrichment method:
		* For each label library transcription factor:
			* Perform enrichment by inputting this transcription factor's gene set into the whole feature library
			* The output is a list of enrichment scores for each experiment in the feature library
		* The list of list of enrichment scores is stored as a matrix in a .csv file
		* (Columns: label library tfs. Indices: feature library experiments. Cell values: scores given by the enrichment method.)

3. **evaluate_scores.py**
* For each `(label, feature)` pair of gmt libraries:
	* The corresponding `.csv` files from `get_scores.py` are loaded
	* For each corresponding `.csv file` (in other words, for each method):
		* For each column (in other words, for each label library tf):
			* The ranks for experiments which correspond to the same tf used to perform enrichment are aggregated.
* Methods are grouped as desired (for example, by library or function), then plotted


### Naming conventions:
* `f` : file
* `df` : pandas.DataFrame
* `lib` : gmt library
* `l` : the "label" gmt library
* `f` : the "feature" gmt library
* `experiment` : The column values of the original gmt files. These could be transcription factors, perterbations, etc.
* `tf(s)` : Transcription factor(s). Note: for some gmt files, not all experiments correspond to a tf.
* `funct` : function - specifically, an enrichment analysis function in gsea_methods.py
* `params` : parameters for the function
* `method` : a specific function & paramaters combination which is being evaluated


## What is meant by "label" and "feature" library?:
The `label library` is the library whose tf gene sets are being inputted for enrichment analysis.
The `feature library` is the library which is being used as the background for enrichment analysis.
In other words, we take each tf from the label library, and perform enrichment with it using all of the feature library.
(Think of ML notation: genes are the samples, and membership within each `feature library` gene set are the features. We want to build a classifier which can label whether or not the gene belongs to the `label library` tf gene set. From this classifier, we extract the feature importances to get the list of enriched `feature library` tfs.)


## Justification for the benchmarking methodology:
Ideally, the experiments with the best scores will correspond to the same the tf which was used to perform enrichment - this is how we benchmark the different enrichment methods!


## Interpretation of the bridge plots:
[In progress]